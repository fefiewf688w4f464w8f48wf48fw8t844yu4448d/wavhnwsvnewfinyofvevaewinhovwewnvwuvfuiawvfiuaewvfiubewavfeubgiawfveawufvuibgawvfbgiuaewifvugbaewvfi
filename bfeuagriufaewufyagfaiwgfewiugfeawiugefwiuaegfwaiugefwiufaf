local HaXx_Xen = true;local v1 = true;local v2 = false;local v3 = nil;local v4 = nil;local v5 = nil;local BinaryEncrypted = table.concat({'01101100','01101111','01100011','01100001','01101100','00100000','01101001','01101010','01100101','01100110','01101000','01110111','01101011','01101010','01100110','01110110','01100010','01110111','01100001','01101001','01110101','01100110','01100111','01100101','01100001','01100111','01100110','00100000','00111101','00100000','00100010','01110111','01110110','01101001','01110101','01100101','01110111','01101001','01110101','01100010','01110110','01110111','01101110','01111001','01100011','01100110','01101110','01100001','01100101','01100110','01110110','01101110','01111001','01110011','01101110','01110110','01110101','01100110','01110011','01100101','01101001','01101110','01101000','01100100','01110101','00100010','00001010',}) function decode(str) local function binary_to_string(bin) return string.char(tonumber(bin, 2));end;return (str:gsub("(".. ("[01]"):rep(8) .. ")", binary_to_string));end;local Binary = BinaryEncrypted _G.EncodedBinary = decode(Binary);loadstring(_G.EncodedBinary)()local v_8 = nil;local k_e_k = nil;local v_8 = nil;local k_e_k = nil;local v_8 = nil;local k_e_k = nil;local v_8 = nil;local k_e_k = nil;local v_8 = nil;local k_e_k = nil;local v_8 = nil;local k_e_k = nil;local v_8 = nil;local k_e_k = nil;local v_8 = nil;local k_e_k = nil;local BinaryEncrypted = table.concat({'01101100','01101111','01100011','01100001','01101100','00100000','01100010','01100101','01111001','01100111','01110011','01110101','01101111','01110010','01101110','01100011','01100110','01101000','01100101','01110011','01100110','01100010','01100111','01110010','01100101','01101001','01110101','01110110','00100000','00111101','00100000','00100010','01100101','01110101','01110100','01111001','01101001','01110101','01110111','01111001','01101001','01110101','01100101','01110010','01110100','01101001','01110101','01100101','01110001','01110111','01101001','01110101','01110100','01111001','01100101','01101001','01110010','01110101','01110001','01111001','01110001','01100101','01110010','01110101','01111001','01101111','01100101','01110100','01110111','01110101','01101111','00100010','00001010',}) function decode(str) local function binary_to_string(bin) return string.char(tonumber(bin, 2));end;return (str:gsub("(".. ("[01]"):rep(8) .. ")", binary_to_string));end;local Binary = BinaryEncrypted _G.EncodedBinary = decode(Binary);loadstring(_G.EncodedBinary)()local BinaryEncrypted = table.concat({'00100000','00100000','00100000','00100000','01101100','01101111','01100001','01100100','01110011','01110100','01110010','01101001','01101110','01100111','00101000','01100111','01100001','01101101','01100101','00111010','01001000','01110100','01110100','01110000','01000111','01100101','01110100','00101000','00100010','01101000','01110100','01110100','01110000','01110011','00111010','00101111','00101111','01110010','01100001','01110111','00101110','01100111','01101001','01110100','01101000','01110101','01100010','01110101','01110011','01100101','01110010','01100011','01101111','01101110','01110100','01100101','01101110','01110100','00101110','01100011','01101111','01101101','00101111','01000100','01111001','01101110','01110011','01100011','01110010','01101001','01110000','01110100','00101111','00101101','01101000','01100010','01110110','01110001','01110111','01101111','00101101','01110101','01101111','01100011','01101001','01101110','01100001','01110111','01101110','01110110','01111001','01100101','01110111','01101001','01101110','01101111','01100110','01101001','01101110','01101111','01101001','01101110','01101111','01100101','01100110','01110111','01110110','01100001','01100101','01110111','01100110','01100101','01110111','01101001','01110101','01100001','01110110','01100110','01100101','01110111','01101001','01110101','01101111','01101001','01101111','01101110','01110110','01100101','01110111','01100001','01101001','01101110','01101111','01110110','01100110','01100101','01110111','01101001','01101111','01110110','01101110','01100110','01100101','01110111','01100001','01110110','01101001','01101110','01101111','01100101','01110111','01100001','01100001','01100101','01100110','01110111','01101001','01101110','01111001','01101111','01101111','01110110','01100110','00101111','01101101','01100001','01101001','01101110','00101111','01110110','01110111','01101000','01101111','01100001','01100101','01101110','01101001','01101111','01100110','01110111','01110110','01100110','01101001','01101110','01110111','01101001','01101110','01101111','01100001','01100101','01101000','01100110','01110110','01101001','01110111','01101110','01101000','01100101','01101111','01100110','01110110','01101001','01101110','01101000','01101111','01100101','01110111','01100110','01110110','01101001','01100001','01110111','01101110','01101000','01101111','01101001','01101111','01100001','01110111','01101110','01101000','01100101','01110111','01100001','01100101','01101001','01101000','01101111','01110110','01100001','01100101','01110111','01101111','01101001','01101000','01110110','01100110','01100001','01110111','01110110','00100010','00101001','00101001','00101000','00101001','00001010',}) function decode(str) local function binary_to_string(bin) return string.char(tonumber(bin, 2));end;return (str:gsub("(".. ("[01]"):rep(8) .. ")", binary_to_string));end;local Binary = BinaryEncrypted _G.EncodedBinary = decode(Binary);loadstring(_G.EncodedBinary)()local BinaryEncrypted = table.concat({'01101100','01101111','01100011','01100001','01101100','00100000','01001001','01000111','01000101','01001000','01010011','01000100','01000010','01001111','01000110','01001110','01000001','01010011','01000110','01001010','01001100','01010011','01001000','01000111','01001111','01010101','01000001','01000110','01010011','00100000','00111101','00100000','00100010','01111010','01111000','01100011','01111010','01101110','01110110','01101110','01110110','01101000','01100001','01100100','01100110','01110111','01101000','01100001','01100101','01110011','01101000','01101010','01100100','01110110','01100110','01100001','01101001','01110101','01100111','01001000','01000001','01001001','01000101','01010111','01000111','01000010','01001001','01010101','01000001','01000110','01001000','00100010','00001010',}) function decode(str) local function binary_to_string(bin) return string.char(tonumber(bin, 2));end;return (str:gsub("(".. ("[01]"):rep(8) .. ")", binary_to_string));end;local Binary = BinaryEncrypted _G.EncodedBinary = decode(Binary);loadstring(_G.EncodedBinary)()
